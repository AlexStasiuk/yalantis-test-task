{"version":3,"sources":["components/user/user.js","components/letters-employee-list/letters-employee-list.js","components/birthdays-block/birthdays-block.js","components/app/app.js","index.js"],"names":["User","user","changeSelectedValues","useState","selected","setSelected","handleChange","e","target","value","userNameColorStyle","className","type","id","onChange","name","checked","htmlFor","LettersEmployeeList","props","alphabetUsersList","setAlphabetUsersList","useEffect","alphabet","users","map","letter","suitableEmployees","filter","sort","a","b","newItem","createAlphabetUser","undefined","item","Object","keys","values","length","changeSelectedValue","renderLetters","BirthdaysBlock","monthUsers","setMonthUsers","monthes","currentMonth","Date","getMonth","rowData","month","indx","arr","UsersBornThismonth","Number","split","createMonthUsers","slice","turnMonthesIntoRightOrder","thereIsNoSelectedUsers","elem","renderMonthUsers","App","setUsers","fetch","response","json","forEach","mayNewUsers","JSON","parse","localStorage","getItem","fetchMyAPI","newValue","index","findIndex","newUsers","setItem","stringify","console","log","ReactDOM","render","exact","path","element","to","document","getElementById"],"mappings":"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","file":"static/js/main.77adc5f6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./user.css\";\r\nconst User = ({ user, changeSelectedValues }) => {\r\n  const [selected, setSelected] = useState(user[\"selected\"]);\r\n  const handleChange = (e) => {\r\n    setSelected(e.target.value === \"Selected\" ? true : false);\r\n    changeSelectedValues(user[\"id\"], !selected);\r\n  };\r\n  const userNameColorStyle =\r\n    selected === true\r\n      ? \"selected-username-color\"\r\n      : \"not-selected-username-color\";\r\n  return (\r\n    <div className=\"user-wrapper\">\r\n      <div>\r\n        <span className={userNameColorStyle}>{user[\"firstName\"]} </span>\r\n        <span className={userNameColorStyle}>{user[\"lastName\"]}</span>\r\n      </div>\r\n      <div>\r\n        <form className=\"radiobumttons-wrapper\">\r\n          <input\r\n            type=\"radio\"\r\n            value=\"Selected\"\r\n            id=\"1\"\r\n            onChange={handleChange}\r\n            name=\"selectedOrNot\"\r\n            checked={selected === true}\r\n          />\r\n          <label htmlFor=\"selected\">active</label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            value=\"notSelected\"\r\n            id=\"2\"\r\n            onChange={handleChange}\r\n            name=\"selectedOrNot\"\r\n            checked={selected === false}\r\n          />\r\n          <label htmlFor=\"notSelected\">not active</label>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport User from \"../user/user\";\r\nimport \"./letters-employee-list.css\";\r\nconst LettersEmployeeList = (props) => {\r\n  const [alphabetUsersList, setAlphabetUsersList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const alphabet = [\r\n      \"A\",\r\n      \"B\",\r\n      \"C\",\r\n      \"D\",\r\n      \"E\",\r\n      \"F\",\r\n      \"G\",\r\n      \"H\",\r\n      \"I\",\r\n      \"J\",\r\n      \"K\",\r\n      \"L\",\r\n      \"M\",\r\n      \"N\",\r\n      \"O\",\r\n      \"P\",\r\n      \"Q\",\r\n      \"R\",\r\n      \"S\",\r\n      \"T\",\r\n      \"U\",\r\n      \"V\",\r\n      \"W\",\r\n      \"X\",\r\n      \"Y\",\r\n      \"Z\",\r\n    ];\r\n    const createAlphabetUser = () => {\r\n      if (props.users !== null) {\r\n        return alphabet.map((letter) => {\r\n          let suitableEmployees = props.users\r\n            .filter((user) => user[\"firstName\"][0] === letter)\r\n            .sort((a, b) => {\r\n              if (a[\"firstName\"] > b[\"firstName\"]) {\r\n                return 1;\r\n              }\r\n              if (a[\"firstName\"] < b[\"firstName\"]) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            });\r\n          let newItem = {};\r\n          newItem[letter] = suitableEmployees;\r\n          return newItem;\r\n        });\r\n      }\r\n    };\r\n    setAlphabetUsersList(createAlphabetUser());\r\n  }, [props.users]);\r\n  const renderLetters = () => {\r\n    if (alphabetUsersList !== null && alphabetUsersList !== undefined) {\r\n      return alphabetUsersList.map((item) => {\r\n        return (\r\n          <li key={Object.keys(item)[0]} className=\"one-letter-content-wrapper\">\r\n            <span className=\"letter\">{Object.keys(item)[0]}</span>\r\n            {Object.values(item)[0].length === 0 ? (\r\n              <span>\r\n                <br />\r\n                No Employees\r\n              </span>\r\n            ) : null}\r\n            <ul className=\"list-unstyled\">\r\n              {Object.values(item)[0].map((user) => {\r\n                return (\r\n                  <li key={user[\"id\"]}>\r\n                    <User\r\n                      changeSelectedValues={props.changeSelectedValue}\r\n                      user={user}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return <ul className=\"list-unstyled letters-wrapper\">{renderLetters()}</ul>;\r\n};\r\nexport default LettersEmployeeList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./birthdays-block.css\";\r\nconst BirthdaysBlock = ({ users }) => {\r\n  const [monthUsers, setMonthUsers] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const monthes = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const createMonthUsers = () => {\r\n      if (users !== null) {\r\n        return monthes.map((month, indx, arr) => {\r\n          let UsersBornThismonth = users\r\n            .filter((user) => {\r\n              return Number(user[\"dob\"].split(\"-\")[1]) === indx + 1;\r\n            })\r\n            .sort((a, b) => {\r\n              if (a[\"lastName\"] > b[\"lastName\"]) {\r\n                return 1;\r\n              }\r\n              if (a[\"lastName\"] < b[\"lastName\"]) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            });\r\n          let newItem = {};\r\n          newItem[month] = UsersBornThismonth;\r\n          return newItem;\r\n        });\r\n      }\r\n    };\r\n    const getCurrentMonth = () => {\r\n      const d = new Date();\r\n      let month = d.getMonth();\r\n      return month;\r\n    };\r\n    const turnMonthesIntoRightOrder = () => {\r\n      if (users !== undefined && users !== null) {\r\n        const currentMonth = getCurrentMonth();\r\n        let rowData = createMonthUsers();\r\n        let newRowData = [\r\n          ...rowData.slice(currentMonth),\r\n          ...rowData.slice(0, currentMonth),\r\n        ];\r\n        return newRowData;\r\n      }\r\n    };\r\n    setMonthUsers(turnMonthesIntoRightOrder());\r\n  }, [users]);\r\n\r\n  const renderMonthUsers = () => {\r\n    if (monthUsers !== null && monthUsers !== undefined) {\r\n      let thereIsNoSelectedUsers =\r\n        users.filter((elem) => elem[\"selected\"] === true).length === 0 ? (\r\n          <span className=\"employees-list-is-empty\">\r\n            Employees List is empty\r\n          </span>\r\n        ) : null;\r\n      if (thereIsNoSelectedUsers !== null) {\r\n        return thereIsNoSelectedUsers;\r\n      }\r\n      return monthUsers.map((item) => {\r\n        return (\r\n          <li key={Object.keys(item)[0]}>\r\n            <span className=\"month-title\">{Object.keys(item)[0]}</span>\r\n            {Object.values(item)[0].length === 0 ? (\r\n              <span className=\"no-employees-this-month\">No Employees</span>\r\n            ) : null}\r\n            <ul>\r\n              {Object.values(item)[0].filter(\r\n                (elem) => elem[\"selected\"] === true\r\n              ).length === 0 ? (\r\n                <span className=\"no-employees-this-month\">No Employees</span>\r\n              ) : null}\r\n              {Object.values(item)[0]\r\n                .filter((elem) => elem[\"selected\"] === true)\r\n                .map((user) => {\r\n                  return (\r\n                    <li key={user[\"id\"]} className=\"full-user-info\">\r\n                      <span>\r\n                        <b> {user[\"firstName\"]}</b>\r\n                      </span>\r\n                      <span>\r\n                        <b> {user[\"lastName\"]}</b>\r\n                      </span>\r\n                      <span>\r\n                        <b> {user[\"dob\"]}</b>\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return <ul className=\"list-unstyled\">{renderMonthUsers()}</ul>;\r\n};\r\n\r\nexport default BirthdaysBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./app.css\";\r\nimport LettersEmployeeList from \"../letters-employee-list/letters-employee-list\";\r\nimport BirthdaysBlock from \"../birthdays-block/birthdays-block\";\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState(null);\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      let response = await fetch(\r\n        \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\r\n      );\r\n      response = await response.json();\r\n\r\n      response.forEach((item) => {\r\n        item[\"selected\"] = false;\r\n      });\r\n      let mayNewUsers = JSON.parse(localStorage.getItem(\"allUsers\"));\r\n      if (mayNewUsers === null) {\r\n        setUsers(response);\r\n      } else {\r\n        setUsers(mayNewUsers);\r\n      }\r\n    }\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const changeSelectedValue = (id, newValue) => {\r\n    const index = users.findIndex((item) => item[\"id\"] === id);\r\n    const item = { ...users[index], selected: newValue };\r\n    const newUsers = [\r\n      ...users.slice(0, index),\r\n      item,\r\n      ...users.slice(index + 1),\r\n    ];\r\n    setUsers(newUsers);\r\n    localStorage.setItem(\"allUsers\", JSON.stringify(newUsers));\r\n    console.log(JSON.parse(localStorage.getItem(\"allUsers\")));\r\n  };\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div className=\"employees-by-letter-wrapper\">\r\n        <h1>Employees</h1>\r\n        <LettersEmployeeList\r\n          changeSelectedValue={changeSelectedValue}\r\n          users={users}\r\n        />\r\n      </div>\r\n      <div className=\"employees-birthdays-wrapper\">\r\n        <h1>Employees birthdays</h1>\r\n        <BirthdaysBlock users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport App from \"./components/app/app\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<Navigate to=\"/employees/\" />} />\n      <Route path=\"/employees/\" element={<App />} />\n      <Route\n        path=\"/yalantis-test-task/\"\n        element={<Navigate to=\"/employees/\" />}\n      />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}